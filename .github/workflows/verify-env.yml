name: Verify Email Environment Variables

on:
  push:
    branches: [main, master, feat/*, fix/*]
  pull_request:
    branches: [main, master]

jobs:
  verify-email-env:
    name: Verify Email Environment Variables
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Verify Email Environment Variables
        env:
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          RESEND_FROM_EMAIL: ${{ secrets.RESEND_FROM_EMAIL }}
          MAIL_DOMAIN: ${{ secrets.MAIL_DOMAIN }}
          RESEND_WEBHOOK_SECRET: ${{ secrets.RESEND_WEBHOOK_SECRET }}
          RESEND_JWT_SECRET: ${{ secrets.RESEND_JWT_SECRET }}
        run: |
          echo "Checking required email environment variables..."

          # Check if all required secrets are present
          if [ -z "$RESEND_API_KEY" ]; then
            echo "‚ùå RESEND_API_KEY is not set"
            exit 1
          else
            echo "‚úÖ RESEND_API_KEY is set"
          fi

          if [ -z "$RESEND_FROM_EMAIL" ]; then
            echo "‚ùå RESEND_FROM_EMAIL is not set"
            exit 1
          else
            echo "‚úÖ RESEND_FROM_EMAIL is set"
          fi

          if [ -z "$MAIL_DOMAIN" ]; then
            echo "‚ùå MAIL_DOMAIN is not set"
            exit 1
          else
            echo "‚úÖ MAIL_DOMAIN is set"
          fi

          if [ -z "$RESEND_WEBHOOK_SECRET" ]; then
            echo "‚ùå RESEND_WEBHOOK_SECRET is not set"
            exit 1
          else
            echo "‚úÖ RESEND_WEBHOOK_SECRET is set"
          fi

          if [ -z "$RESEND_JWT_SECRET" ]; then
            echo "‚ùå RESEND_JWT_SECRET is not set"
            exit 1
          else
            echo "‚úÖ RESEND_JWT_SECRET is set"
          fi

          # Validate API key format
          if [[ ! "$RESEND_API_KEY" =~ ^re_[a-zA-Z0-9_]+ ]]; then
            echo "‚ùå RESEND_API_KEY does not match expected format (should start with 're_')"
            exit 1
          else
            echo "‚úÖ RESEND_API_KEY format is valid"
          fi

          # Validate email format
          if [[ ! "$RESEND_FROM_EMAIL" =~ ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
            echo "‚ùå RESEND_FROM_EMAIL is not a valid email format"
            exit 1
          else
            echo "‚úÖ RESEND_FROM_EMAIL format is valid"
          fi

          # Validate domain format
          if [[ ! "$MAIL_DOMAIN" =~ ^[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$ ]]; then
            echo "‚ùå MAIL_DOMAIN is not a valid domain format"
            exit 1
          else
            echo "‚úÖ MAIL_DOMAIN format is valid"
          fi

          # Check if from email domain matches mail domain
          FROM_DOMAIN=$(echo "$RESEND_FROM_EMAIL" | cut -d'@' -f2)
          if [ "$FROM_DOMAIN" != "$MAIL_DOMAIN" ]; then
            echo "‚ö†Ô∏è  Warning: RESEND_FROM_EMAIL domain ($FROM_DOMAIN) doesn't match MAIL_DOMAIN ($MAIL_DOMAIN)"
          else
            echo "‚úÖ Email domain matches mail domain"
          fi

          echo "üéâ All email environment variables are properly configured!"

      - name: Test Email Configuration (Build Check)
        env:
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          RESEND_FROM_EMAIL: ${{ secrets.RESEND_FROM_EMAIL }}
          MAIL_DOMAIN: ${{ secrets.MAIL_DOMAIN }}
          RESEND_WEBHOOK_SECRET: ${{ secrets.RESEND_WEBHOOK_SECRET }}
          RESEND_JWT_SECRET: ${{ secrets.RESEND_JWT_SECRET }}
          DATABASE_URL: "postgres://dummy:dummy@localhost:5432/dummy"
          BETTER_AUTH_SECRET: "dummy-secret-for-ci"
          BETTER_AUTH_URL: "http://localhost:4321"
          GOOGLE_CLIENT_ID: "dummy-client-id"
          GOOGLE_CLIENT_SECRET: "dummy-client-secret"
          PUBLIC_GOOGLE_MAPS_API_KEY: "dummy-maps-key"
        run: |
          echo "Testing build with email configuration..."
          bun run build
          echo "‚úÖ Build successful with email environment variables"
