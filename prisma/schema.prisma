// datasource for PostgreSQL
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// generator for Prisma Client
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

// User model (matches Better Auth's "user" table)
model user {
  id            String    @id
  name          String
  email         String    @unique
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime
  
  // Relations
  accounts      account[]
  sessions      session[]
  auditSubmissions auditSubmission[]
}

// Session model (matches Better Auth's "session" table)
model session {
  id        String   @id
  expiresAt DateTime
  token     String   @unique
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  
  // Relations
  user      user     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Account model (matches Better Auth's "account" table)
model account {
  id                       String    @id
  accountId                String
  providerId               String
  userId                   String
  accessToken              String?
  refreshToken             String?
  idToken                  String?
  accessTokenExpiresAt     DateTime?
  refreshTokenExpiresAt    DateTime?
  scope                    String?
  password                 String?
  createdAt                DateTime
  updatedAt                DateTime

  // Relations
  user                     user      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

// Verification model (matches Better Auth's "verification" table)
model verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?
} 

model auditSubmission {
  id                String   @id @default(uuid())
  userId            String
  businessName      String
  businessAddress   String?
  businessPhone     String?
  businessWebsite   String?
  placeId           String   @unique
  googleBusinessUrl String?
  businessTypes     String?

  firstName      String
  lastName       String
  email          String
  personalPhone  String?
  message        String

  status        String   @default("new")
  reviewStatus  String   @default("pending")
  notes         String?

  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  user          user     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
} 