---
import heatworksIcon from "@assets/images/heatworks/heatworks-icon.svg";
import heatworksPattern2Tile from "@assets/images/heatworks/heatworks-pattern-2-tile.webp";
const { title, btnId, btnTitle, url } = Astro.props;

interface Props {
  title?: string;
  btnId: string;
  btnTitle: string;
  url: string;
}
---

<astro-banner btnId={btnId}>
  <div
    class="fixed start-1/2 bottom-0 z-100 mx-auto w-full -translate-x-1/2 transform p-6 sm:max-w-4xl"
    role="region"
    aria-label="Informational Banner"
  >
    <div
      class="banner-with-pattern-bg relative overflow-hidden rounded-xl bg-neutral-800 p-4 text-center shadow-xs"
      style={{
        backgroundImage: `url(${heatworksPattern2Tile.src})`,
        backgroundRepeat: "repeat",
      }}
    >
      <div class="absolute top-1/2 left-[-150px] z-2 -translate-y-1/2">
        <img src={heatworksIcon.src} alt="Heatworks Icon" class="w-[400px]" />
      </div>
      <div
        class="pointer-events-none absolute inset-0 z-1 h-full w-full"
        aria-hidden="true"
        style="background: linear-gradient(to right, #000 0%, transparent 100%);"
      >
      </div>
      <div class="flex items-center justify-center">
        <div class="z-10 ml-auto">
          {
            title && (
              <p class="me-2 inline-block font-medium text-neutral-50 hover:text-orange-500">
                {title}
              </p>
            )
          }
          <a
            class="group inline-flex items-center gap-x-2 rounded-full border-2 border-neutral-700 px-3 py-2 text-sm font-semibold text-neutral-50 backdrop-brightness-100 transition duration-300 hover:border-orange-500 hover:text-orange-500 focus:outline-hidden disabled:pointer-events-none disabled:opacity-50 sm:backdrop-brightness-100"
            href={url}
            target="_blank"
          >
            {btnTitle}
            <svg
              class="size-4 shrink-0 transition duration-300 group-hover:translate-x-1"
              width="24"
              height="24"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"><path d="m9 18 6-6-6-6"></path></svg
            >
          </a>
        </div>
        <button
          type="button"
          class="z-10 ml-auto inline-flex items-center gap-x-2 rounded-full border border-transparent bg-neutral-700 p-2 text-sm font-semibold text-neutral-50 hover:bg-neutral-700/80 hover:text-neutral-50 focus:outline-hidden disabled:pointer-events-none disabled:opacity-50"
          id={btnId}
        >
          <span class="sr-only">Dismiss</span>
          <svg
            class="size-5 shrink-0"
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
            ><path d="M18 6 6 18"></path><path d="m6 6 12 12"></path></svg
          >
        </button>
      </div>
    </div>
  </div>
</astro-banner>
<script>
  class AstroBanner extends HTMLElement {
    connectedCallback() {
      const btnId = this.getAttribute("btnId");
      const button = this.querySelector(`#${btnId}`);
      if (button != null) {
        button.addEventListener("click", () => this.remove());
      }
    }
  }

  customElements.define("astro-banner", AstroBanner);
</script>

<style>
  .banner-with-pattern-bg::after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    /* background-image: url("/heatworks/heatworks-pattern-2-tile.webp"); */
    /* background-repeat: repeat; */
    z-index: 1;
    opacity: 0.3; /* Adjust this value as needed for the desired opacity */
    border-radius: inherit; /* Inherit border-radius from parent */
  }
</style>
